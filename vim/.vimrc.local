" makes the gutter show numbering relative to the current line.
"set relativenumber

" makes vim create .un~ files, which will allow undo even between open/close
"set undofile

" use h/j/k/l like a good boy
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap jj <Esc>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" get rid of the help key
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

map <Leader>n :NERDTreeToggle<CR>

function! WinMove(key) 
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr()) "we havent moved
    if (match(a:key,'[jk]')) "were we going up/down
      wincmd v
    else 
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction
 
"move through windows, and if necessary, create a new one
map <leader>h              :call WinMove('h')<cr>
map <leader>k              :call WinMove('k')<cr>
map <leader>l              :call WinMove('l')<cr>
map <leader>j              :call WinMove('j')<cr>

"move windows
map <leader>H              :wincmd H<cr>
map <leader>K              :wincmd K<cr>
map <leader>L              :wincmd L<cr>
map <leader>J              :wincmd J<cr>

"close current window
map <leader>wc :wincmd q<cr>

"rotate current window
map <leader>wr <C-W>r

"resize windows using arrow keys
nmap <left>  :3wincmd <<cr>
nmap <right> :3wincmd ><cr>
nmap <up>    :3wincmd +<cr>
nmap <down>  :3wincmd -<cr>

"show whitespace characters
set list listchars=tab:»\ ,trail:·,eol:•,nbsp:·

if has("gui_macvim")
  macmenu Window.Toggle\ Full\ Screen\ Mode key=<D-f>
  set guioptions=aAce
  set guifont=Inconsolata:h12
  set columns=90
  color desert256
end